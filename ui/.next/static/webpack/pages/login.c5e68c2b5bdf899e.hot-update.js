"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/login",{

/***/ "(pages-dir-browser)/./lib/api.js":
/*!********************!*\
  !*** ./lib/api.js ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   syncUser: () => (/* binding */ syncUser)\n/* harmony export */ });\n// API functions to interact with the FastAPI backend\n/**\r\n * Syncs a user with the backend database\r\n * @param {Object} user - The user object from Supabase auth\r\n * @returns {Promise<Object>} - The response from the backend\r\n */ async function syncUser(user) {\n    try {\n        // First sync the user with the backend\n        const syncResponse = await fetch(\"http://localhost:8000/auth/sync\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        });\n        if (!syncResponse.ok) {\n            throw new Error('Failed to sync user');\n        }\n        // Then try to get the user data\n        const userResponse = await fetch(\"\".concat(API_URL, \"/users/\").concat(user.id));\n        // If user not found (404), return the original user data\n        if (userResponse.status === 404) {\n            console.log('User not found in backend, using original data');\n            return user;\n        }\n        if (!userResponse.ok) {\n            throw new Error('Failed to fetch user data');\n        }\n        const userData = await userResponse.json();\n        return userData;\n    } catch (error) {\n        console.error('Error syncing user:', error);\n        // Return the original user data if there's an error\n        return user;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2xpYi9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHFEQUFxRDtBQUVyRDs7OztDQUlDLEdBQ00sZUFBZUEsU0FBU0MsSUFBSTtJQUNqQyxJQUFJO1FBQ0YsdUNBQXVDO1FBQ3ZDLE1BQU1DLGVBQWUsTUFBTUMsTUFBTyxtQ0FBa0M7WUFDbEVDLFFBQVE7WUFDUkMsU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDUDtRQUN2QjtRQUVBLElBQUksQ0FBQ0MsYUFBYU8sRUFBRSxFQUFFO1lBQ3BCLE1BQU0sSUFBSUMsTUFBTTtRQUNsQjtRQUVBLGdDQUFnQztRQUNoQyxNQUFNQyxlQUFlLE1BQU1SLE1BQU0sR0FBb0JGLE9BQWpCVyxTQUFRLFdBQWlCLE9BQVJYLEtBQUtZLEVBQUU7UUFFNUQseURBQXlEO1FBQ3pELElBQUlGLGFBQWFHLE1BQU0sS0FBSyxLQUFLO1lBQy9CQyxRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPZjtRQUNUO1FBRUEsSUFBSSxDQUFDVSxhQUFhRixFQUFFLEVBQUU7WUFDcEIsTUFBTSxJQUFJQyxNQUFNO1FBQ2xCO1FBRUEsTUFBTU8sV0FBVyxNQUFNTixhQUFhTyxJQUFJO1FBQ3hDLE9BQU9EO0lBQ1QsRUFBRSxPQUFPRSxPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQyx1QkFBdUJBO1FBQ3JDLG9EQUFvRDtRQUNwRCxPQUFPbEI7SUFDVDtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNodWJoXFxEb2N1bWVudHNcXGZhbnRhc3kgYXBwXFx1aVxcbGliXFxhcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQVBJIGZ1bmN0aW9ucyB0byBpbnRlcmFjdCB3aXRoIHRoZSBGYXN0QVBJIGJhY2tlbmRcclxuXHJcbi8qKlxyXG4gKiBTeW5jcyBhIHVzZXIgd2l0aCB0aGUgYmFja2VuZCBkYXRhYmFzZVxyXG4gKiBAcGFyYW0ge09iamVjdH0gdXNlciAtIFRoZSB1c2VyIG9iamVjdCBmcm9tIFN1cGFiYXNlIGF1dGhcclxuICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gLSBUaGUgcmVzcG9uc2UgZnJvbSB0aGUgYmFja2VuZFxyXG4gKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN5bmNVc2VyKHVzZXIpIHtcclxuICB0cnkge1xyXG4gICAgLy8gRmlyc3Qgc3luYyB0aGUgdXNlciB3aXRoIHRoZSBiYWNrZW5kXHJcbiAgICBjb25zdCBzeW5jUmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovL2xvY2FsaG9zdDo4MDAwL2F1dGgvc3luY2AsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1c2VyKSxcclxuICAgIH0pO1xyXG5cclxuICAgIGlmICghc3luY1Jlc3BvbnNlLm9rKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHN5bmMgdXNlcicpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFRoZW4gdHJ5IHRvIGdldCB0aGUgdXNlciBkYXRhXHJcbiAgICBjb25zdCB1c2VyUmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfVVJMfS91c2Vycy8ke3VzZXIuaWR9YCk7XHJcbiAgICBcclxuICAgIC8vIElmIHVzZXIgbm90IGZvdW5kICg0MDQpLCByZXR1cm4gdGhlIG9yaWdpbmFsIHVzZXIgZGF0YVxyXG4gICAgaWYgKHVzZXJSZXNwb25zZS5zdGF0dXMgPT09IDQwNCkge1xyXG4gICAgICBjb25zb2xlLmxvZygnVXNlciBub3QgZm91bmQgaW4gYmFja2VuZCwgdXNpbmcgb3JpZ2luYWwgZGF0YScpO1xyXG4gICAgICByZXR1cm4gdXNlcjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKCF1c2VyUmVzcG9uc2Uub2spIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggdXNlciBkYXRhJyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdXNlckRhdGEgPSBhd2FpdCB1c2VyUmVzcG9uc2UuanNvbigpO1xyXG4gICAgcmV0dXJuIHVzZXJEYXRhO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzeW5jaW5nIHVzZXI6JywgZXJyb3IpO1xyXG4gICAgLy8gUmV0dXJuIHRoZSBvcmlnaW5hbCB1c2VyIGRhdGEgaWYgdGhlcmUncyBhbiBlcnJvclxyXG4gICAgcmV0dXJuIHVzZXI7XHJcbiAgfVxyXG59ICJdLCJuYW1lcyI6WyJzeW5jVXNlciIsInVzZXIiLCJzeW5jUmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwiRXJyb3IiLCJ1c2VyUmVzcG9uc2UiLCJBUElfVVJMIiwiaWQiLCJzdGF0dXMiLCJjb25zb2xlIiwibG9nIiwidXNlckRhdGEiLCJqc29uIiwiZXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./lib/api.js\n"));

/***/ })

});