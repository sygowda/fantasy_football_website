"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/login",{

/***/ "(pages-dir-browser)/./lib/api.js":
/*!********************!*\
  !*** ./lib/api.js ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   syncUser: () => (/* binding */ syncUser)\n/* harmony export */ });\n// API functions to interact with the FastAPI backend\n/**\r\n * Syncs a user with the backend database\r\n * @param {Object} user - The user object from Supabase auth\r\n * @returns {Promise<Object>} - The response from the backend\r\n */ async function syncUser(user) {\n    try {\n        var _user_user_metadata;\n        // Log the user object to see what we're working with\n        console.log('Syncing user:', user);\n        // Extract user data, ensuring we have the required fields\n        const userId = user.id;\n        const fullName = ((_user_user_metadata = user.user_metadata) === null || _user_user_metadata === void 0 ? void 0 : _user_user_metadata.full_name) || user.email || 'Unknown User';\n        const email = user.email;\n        // Log the data we're sending\n        console.log('Sending data:', {\n            id: userId,\n            full_name: fullName,\n            email\n        });\n        const response = await fetch('http://localhost:8000/sync-user', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: userId,\n                full_name: fullName,\n                email: email\n            })\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error('Error response:', errorText);\n            throw new Error(\"HTTP error! status: \".concat(response.status, \", message: \").concat(errorText));\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error syncing user:', error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2xpYi9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHFEQUFxRDtBQUVyRDs7OztDQUlDLEdBQ00sZUFBZUEsU0FBU0MsSUFBSTtJQUNqQyxJQUFJO1lBTWVBO1FBTGpCLHFEQUFxRDtRQUNyREMsUUFBUUMsR0FBRyxDQUFDLGlCQUFpQkY7UUFFN0IsMERBQTBEO1FBQzFELE1BQU1HLFNBQVNILEtBQUtJLEVBQUU7UUFDdEIsTUFBTUMsV0FBV0wsRUFBQUEsc0JBQUFBLEtBQUtNLGFBQWEsY0FBbEJOLDBDQUFBQSxvQkFBb0JPLFNBQVMsS0FBSVAsS0FBS1EsS0FBSyxJQUFJO1FBQ2hFLE1BQU1BLFFBQVFSLEtBQUtRLEtBQUs7UUFFeEIsNkJBQTZCO1FBQzdCUCxRQUFRQyxHQUFHLENBQUMsaUJBQWlCO1lBQUVFLElBQUlEO1lBQVFJLFdBQVdGO1lBQVVHO1FBQU07UUFFdEUsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLG1DQUFtQztZQUM5REMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtZQUNsQjtZQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CWCxJQUFJRDtnQkFDSkksV0FBV0Y7Z0JBQ1hHLE9BQU9BO1lBQ1Q7UUFDRjtRQUVBLElBQUksQ0FBQ0MsU0FBU08sRUFBRSxFQUFFO1lBQ2hCLE1BQU1DLFlBQVksTUFBTVIsU0FBU1MsSUFBSTtZQUNyQ2pCLFFBQVFrQixLQUFLLENBQUMsbUJBQW1CRjtZQUNqQyxNQUFNLElBQUlHLE1BQU0sdUJBQW9ESCxPQUE3QlIsU0FBU1ksTUFBTSxFQUFDLGVBQXVCLE9BQVZKO1FBQ3RFO1FBRUEsT0FBTyxNQUFNUixTQUFTYSxJQUFJO0lBQzVCLEVBQUUsT0FBT0gsT0FBTztRQUNkbEIsUUFBUWtCLEtBQUssQ0FBQyx1QkFBdUJBO1FBQ3JDLE1BQU1BO0lBQ1I7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzaHViaFxcRG9jdW1lbnRzXFxmYW50YXN5IGFwcFxcdWlcXGxpYlxcYXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEFQSSBmdW5jdGlvbnMgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgRmFzdEFQSSBiYWNrZW5kXHJcblxyXG4vKipcclxuICogU3luY3MgYSB1c2VyIHdpdGggdGhlIGJhY2tlbmQgZGF0YWJhc2VcclxuICogQHBhcmFtIHtPYmplY3R9IHVzZXIgLSBUaGUgdXNlciBvYmplY3QgZnJvbSBTdXBhYmFzZSBhdXRoXHJcbiAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IC0gVGhlIHJlc3BvbnNlIGZyb20gdGhlIGJhY2tlbmRcclxuICovXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzeW5jVXNlcih1c2VyKSB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIExvZyB0aGUgdXNlciBvYmplY3QgdG8gc2VlIHdoYXQgd2UncmUgd29ya2luZyB3aXRoXHJcbiAgICBjb25zb2xlLmxvZygnU3luY2luZyB1c2VyOicsIHVzZXIpO1xyXG4gICAgXHJcbiAgICAvLyBFeHRyYWN0IHVzZXIgZGF0YSwgZW5zdXJpbmcgd2UgaGF2ZSB0aGUgcmVxdWlyZWQgZmllbGRzXHJcbiAgICBjb25zdCB1c2VySWQgPSB1c2VyLmlkO1xyXG4gICAgY29uc3QgZnVsbE5hbWUgPSB1c2VyLnVzZXJfbWV0YWRhdGE/LmZ1bGxfbmFtZSB8fCB1c2VyLmVtYWlsIHx8ICdVbmtub3duIFVzZXInO1xyXG4gICAgY29uc3QgZW1haWwgPSB1c2VyLmVtYWlsO1xyXG4gICAgXHJcbiAgICAvLyBMb2cgdGhlIGRhdGEgd2UncmUgc2VuZGluZ1xyXG4gICAgY29uc29sZS5sb2coJ1NlbmRpbmcgZGF0YTonLCB7IGlkOiB1c2VySWQsIGZ1bGxfbmFtZTogZnVsbE5hbWUsIGVtYWlsIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvc3luYy11c2VyJywge1xyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBpZDogdXNlcklkLFxyXG4gICAgICAgIGZ1bGxfbmFtZTogZnVsbE5hbWUsXHJcbiAgICAgICAgZW1haWw6IGVtYWlsXHJcbiAgICAgIH0pLFxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICBjb25zdCBlcnJvclRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlc3BvbnNlOicsIGVycm9yVGV4dCk7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c30sIG1lc3NhZ2U6ICR7ZXJyb3JUZXh0fWApO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN5bmNpbmcgdXNlcjonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn0gIl0sIm5hbWVzIjpbInN5bmNVc2VyIiwidXNlciIsImNvbnNvbGUiLCJsb2ciLCJ1c2VySWQiLCJpZCIsImZ1bGxOYW1lIiwidXNlcl9tZXRhZGF0YSIsImZ1bGxfbmFtZSIsImVtYWlsIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwiZXJyb3JUZXh0IiwidGV4dCIsImVycm9yIiwiRXJyb3IiLCJzdGF0dXMiLCJqc29uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./lib/api.js\n"));

/***/ })

});